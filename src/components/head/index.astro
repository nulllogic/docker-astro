---
export interface Props {
    title: string;
    description: string;
    image?: string;
}

const {title, description, image = "/placeholder-social.jpg"} = Astro.props;
---

<!-- |–––––––––––––––––––– SCSSLeon ϟ made with ♥ ––––-––––––––––––––––––––-| --><!-- Global Metadata -->
<meta charset="utf-8"/>
<meta name="viewport" content="width=device-width,initial-scale=1"/>
<link rel="icon" type="image/svg+xml" href="/favicon.svg"/>
<meta name="generator" content={Astro.generator}/>

<meta name="theme-color" media="(prefers-color-scheme: dark)" content="black"/>

<slot/>

<!-- Sitemap -->
<link rel="sitemap" href="/sitemap.xml"/>

<!-- Primary Meta Tags -->
<title>{title}</title>
<meta name="title" content={title}/>
<meta name="description" content={description}/>

<!-- Open Graph / Facebook -->
<meta property="og:type" content="website"/>
<meta property="og:url" content={Astro.url}/>
<meta property="og:title" content={title}/>
<meta property="og:description" content={description}/>
<meta property="og:image" content={new URL(image, Astro.url)}/>

<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image"/>
<meta property="twitter:url" content={Astro.url}/>
<meta property="twitter:title" content={title}/>
<meta property="twitter:description" content={description}/>
<meta property="twitter:image" content={new URL(image, Astro.url)}/>

<!-- Styles -->
<style lang="scss" is:global>
  @use "sass:list";
  @use "sass:meta";

  // ↓ Config
  @use "~/styles/app.scss" as app;

  // Getting updated variables
  $config: app.$config;
  $theme: app.$theme;

  // ↓ Root
  @use "@nulllogic/scssleon/scss/root" with (
    $config: $config,
    $theme: $theme
  );

  // Great reset
  @use "@nulllogic/scssleon/scss/reset" with (
    $config: $config,
    $theme: $theme
  );

  // Base
  // Special utility, that will dynamically generate CSS
  // properties for HTML tags, specified in theme
  @use "@nulllogic/scssleon/scss/base" with (
    $config: $config,
    $theme: $theme
  );

  // Amazing content
  // Special class `.content` to allow formatting of the default html tags
  @use "@nulllogic/scssleon/scss/content" with (
    $config: $config,
    $theme: $theme
  );

  // ↓ Container
  @use "@nulllogic/scssleon/scss/components/container" with (
    $config: $config,
    $theme: $theme
  );

  // ↓ Nav
  @use "@nulllogic/scssleon/scss/components/nav" with (
    $config: $config,
    $theme: $theme
  );

</style>

