---
import Index from "../layouts/index.astro";
import {Snippet} from "../components/snippet";

//https://api.github.com/repos/nulllogic/scssleon/branches/master

const response = await fetch(
    "https://api.github.com/repos/nulllogic/scssleon/branches/master",
);
const data = await response.json();
const commit_date =
    typeof data.message === "undefined"
        ? new Date(data.commit.commit.author.date)
        : new Date();
---

<Index>
  <main>
    <div class="welcome">
      <div class="container xxl">
        <h1 class="title">SCSS superpowers.</h1>
        <h2 class="subtitle">Get ready to notice flaws in every product you use, and then reverse-engineer how experts
          make stuff feel
          <code>‘intuitive’</code> and <code>‘easy’</code>.
        </h2>
        <p class="latest-commit">
          Latest Commit on GitHub: {
            commit_date.toISOString().replace(/(.*)T(.*)\..*/, "$1 $2")
        }
        </p>
      </div>
    </div>

    <div class="customize">
      <div class="container xxl">
        <h2 class="title">Customize everything with SCSS</h2>
        <p>SCSSleon utilizes Sass for a modular and customizable architecture. Import only the components you need,
          enable global options like gradients and shadows, and write your own CSS with our variables, maps, functions,
          and mixins.</p>
        <div class="grid">
          <div class="column">
            <h3>Include all of SCSSleon’s parts</h3>
            <p>Import one stylesheet and you're off to the races with every feature of our CSS.</p>
            <Snippet>
              // Variable overrides first
            </Snippet>
          </div>
          <div class="column">
            <h3>Include what you need</h3>
            <Snippet>
              // Variable overrides first
            </Snippet>
          </div>
        </div>
      </div>
    </div>

    <div class="features">
      <div class="container xxl">
        <h2 class="title">Why SCSSLeon ?</h2>
        <p>SCSSLeon understands the full frontend development journey in ways few other tools do.
          Make any deployment simple, wherever you develop software.</p>
        <div class="grid">
          <div class="first">
            <div class="card">
              123
            </div>
          </div>
          <div class="second">
            <div class="card">
              123
            </div>
          </div>
          <div class="third">
            <div class="card">
              123
            </div>
          </div>
          <div class="fourth">
            <div class="card">
              123
            </div>
          </div>
        </div>
      </div>
    </div>
  </main>
</Index>

<style lang="scss">
  @use "sass:list";
  @use "sass:meta";
  @use "sass:string";
  @use "sass:map";

  @use "../styles/app.scss" as app;
  @use "../styles/scss/mixins.scss" as mixins;
  @use "../styles/scss/functions.scss" as functions;

  $welcome-section: (
    --padding: 105px 0,
    text-align: center,
    background: var(--background),
    padding: var(--padding),
    colors : (
      dark : (
        background: rgba(17, 23, 26, 1) radial-gradient(at 0 0, rgba(0, 62, 107, .4) 35%, #00000000 70%),
      )
    ),
    subclasses : (
      ".title" : (
        display: inline-block,
        font-size: 5rem,
        font-weight: 700,
        background-image: linear-gradient(143deg, rgb(126, 35, 246) 30%, rgb(253, 104, 253), rgb(126, 35, 246) 60%),
        background-clip: text,
        -webkit-background-clip: text,
        -webkit-text-fill-color: transparent,
        background-size: 500% 500%,
        animation-duration: 3s,
        animation-timing-function: linear,
        animation-delay: 0s,
        animation-iteration-count: infinite,
        animation-direction: normal,
        animation-fill-mode: none,
        animation-play-state: running,
        animation-name: dobza,
      ),
      ".latest-commit" : (
        background: var(--background),
        colors : (
          dark : (
            background: rgba(65, 52, 99, 0.4)
          )
        )
      )
    )
  );

  @include mixins.generate-component(
      $welcome-section,
      "welcome",
      app.$config,
      app.$theme
  );

  $customize-section: (
    background: var(--background),
    colors: (
      dark: (
        background: rgba(17, 23, 26, 1)
      )
    ),
    subclasses : (
      ".title" : (
        font-size: 3.25rem,
      ),
      ".grid" : (
        display: grid,
        grid-template-columns: 1fr 1fr,
        grid-gap: 1.5rem
      )
    )
  );

  @include mixins.generate-component(
      $customize-section,
      "customize",
      app.$config,
      app.$theme
  );

  $card: functions.get-theme(app.$theme, 'components.card');

  $card: map.deep-merge($card, (
    border: var(--border),
    background: var(--background),
    box-shadow: var(--box-shadow),
    colors: (
      dark : (
        border: 1px solid rgba(74, 58, 118, .5),
        background: string.unquote("linear-gradient(165deg, rgb(29, 30, 37) -5%, rgb(22, 23, 29) 25%)"),
        box-shadow: 0 0 10px rgba(0, 0, 0, .3)
      )
    )
  ));

  $features-section: (
    --padding: 35px 15px,
    background: var(--background),
    padding: var(--padding),
    colors: (
      dark: (
        background: rgba(17, 23, 26, 1)
      )
    ),
    responsive: (
      md: (
        --padding: 35px 5px,
      ),
      lg: (
        --padding: 35px 5px,
      ),
    ),
    subclasses : (
      ".grid" : (
        display: grid,
        width: 100%,
        grid-template-columns: repeat(12, minmax(0, 1fr)),
        grid-auto-rows: 5rem,
        grid-gap: 1.25rem,
        position: relative,
        subclasses : (
          ".first" : (
            grid-row: auto/span 5,
            grid-column: auto/span 7,
            grid-auto-flow: row,
            subclasses : (
              ".card" : $card
            )
          ),
          ".second" : (
            grid-row: auto/span 5,
            grid-column: auto/span 5,
            subclasses : (
              ".card" : $card
            )
          ),
          ".third" : (
            grid-row: auto/span 5,
            grid-column: auto/span 5,
            subclasses : (
              ".card" : $card
            )
          ),
          ".fourth" : (
            grid-row: auto/span 5,
            grid-column: auto/span 7,
            subclasses : (
              ".card" : $card
            )
          )
        )
      )
    )
  );

  @include mixins.generate-component(
      $features-section,
      "features",
      app.$config,
      app.$theme
  );
</style>